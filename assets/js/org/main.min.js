let map,markers=[];function initMap(center=[35.6762,139.6503],buildings=[]){console.log('initMap called with center:',center,'buildings:',buildings);const mapElement=document.getElementById('map');if(!mapElement){console.error('Map element not found');return}if(map){map.remove()}try{map=L.map('map').setView(center,15);console.log('Map created successfully');L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',{attribution:'© OpenStreetMap contributors',maxZoom:19}).addTo(map);console.log('Tile layer added successfully')}catch(error){console.error('Error creating map:',error);return}map.zoomControl.setPosition('bottomleft');console.log('initMap - Page info:',window.pageInfo);addMarkers(buildings);if(buildings.length>1){const group=new L.featureGroup(markers);map.fitBounds(group.getBounds().pad(0.1))}}function addMarkers(buildings){markers.forEach(marker=>map.removeLayer(marker));markers=[];const pageInfo=window.pageInfo||{currentPage:1,limit:10};console.log('Page info for markers:',pageInfo);buildings.forEach((building,index)=>{if(building.lat&&building.lng&&building.lat!==0&&building.lng!==0){const isDetailView=buildings.length===1;let icon;if(isDetailView){icon=L.icon({iconUrl:'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-red.png',shadowUrl:'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',iconSize:[25,41],iconAnchor:[12,41],popupAnchor:[1,-34],shadowSize:[41,41]})}else{const globalIndex=(pageInfo.currentPage-1)*pageInfo.limit+index+1;console.log(`Marker ${index}: local=${index+1}, global=${globalIndex}, page=${pageInfo.currentPage}, limit=${pageInfo.limit}`);icon=L.divIcon({html:`<div style="background-color: #2563eb; color: white; border-radius: 50%; width: 32px; height: 32px; display: flex; align-items: center; justify-content: center; font-size: 14px; font-weight: bold; border: 2px solid white; box-shadow: 0 2px 4px rgba(0,0,0,0.2);">${globalIndex}</div>`,className:'custom-marker',iconSize:[32,32],iconAnchor:[16,16]})}const marker=L.marker([building.lat,building.lng],{icon}).bindPopup(createPopupContent(building),{closeButton:true,autoClose:false,closeOnClick:false}).on('popupopen',function(){setTimeout(()=>{if(typeof lucide!=='undefined'){lucide.createIcons()}},100)});markers.push(marker);map.addLayer(marker)}})}function createPopupContent(building){return building.popupContent||''}function getCurrentLocation(){const btn=document.getElementById('getLocationBtn');const originalText=btn.innerHTML;const currentUrl=new URL(window.location);const lang=currentUrl.searchParams.get('lang')||'ja';const loadingText=lang==='ja'?'取得中...':'Getting...';btn.innerHTML='<i data-lucide="loader-2" class="me-1" style="width: 16px; height: 16px; animation: spin 1s linear infinite;"></i>'+loadingText;btn.disabled=true;if(navigator.geolocation){navigator.geolocation.getCurrentPosition(function(position){const lat=position.coords.latitude;const lng=position.coords.longitude;const lang=new URLSearchParams(window.location.search).get('lang')||'ja';const rootUrl=new URL('/',window.location.origin);rootUrl.searchParams.set('lang',lang);rootUrl.searchParams.set('lat',lat);rootUrl.searchParams.set('lng',lng);rootUrl.searchParams.set('radius','5');window.location.href=rootUrl.toString()},function(error){const errorMessage=lang==='ja'?'位置情報の取得に失敗しました: '+error.message:'Failed to get location: '+error.message;alert(errorMessage);btn.innerHTML=originalText;btn.disabled=false})}else{const errorMessage=lang==='ja'?'このブラウザは位置情報をサポートしていません':'This browser does not support geolocation';alert(errorMessage);btn.innerHTML=originalText;btn.disabled=false}}function searchNearby(lat,lng){const lang=new URLSearchParams(window.location.search).get('lang')||'ja';const rootUrl=new URL('/',window.location.origin);rootUrl.searchParams.set('lang',lang);rootUrl.searchParams.set('lat',lat);rootUrl.searchParams.set('lng',lng);rootUrl.searchParams.set('radius','5');window.location.href=rootUrl.toString()}function getDirections(lat,lng){const lang=new URLSearchParams(window.location.search).get('lang')||'ja';const directionsUrl=lang==='ja'?`https://www.google.com/maps/dir/?api=1&destination=${lat},${lng}`:`https://www.google.com/maps/dir/?api=1&destination=${lat},${lng}`;window.open(directionsUrl,'_blank')}function viewOnGoogleMaps(lat,lng){const googleMapsUrl=`https://www.google.com/maps?q=${lat},${lng}`;window.open(googleMapsUrl,'_blank')}function initLanguageSwitch(){const languageSwitches=document.querySelectorAll('.language-switch');languageSwitches.forEach(switchElement=>{switchElement.addEventListener('click',function(e){e.preventDefault();const targetLang=this.dataset.lang;const currentUrl=new URL(window.location);currentUrl.searchParams.set('lang',targetLang);window.location.href=currentUrl.toString()})})}document.addEventListener('DOMContentLoaded',function(){initLanguageSwitch();console.log('DOMContentLoaded - Page info:',window.pageInfo);const buildingCards=document.querySelectorAll('.building-card');console.log('Found building cards:',buildingCards.length);const buildings=Array.from(buildingCards).map((card,index)=>{console.log(`Card ${index}:`,{lat:card.dataset.lat,lng:card.dataset.lng,title:card.dataset.title,titleEn:card.dataset['title-en']});const lat=parseFloat(card.dataset.lat);const lng=parseFloat(card.dataset.lng);if(lat&&lng&&!isNaN(lat)&&!isNaN(lng)){return{building_id:card.dataset.buildingId,lat:lat,lng:lng,title:card.dataset.title,titleEn:card.dataset['title-en'],location:card.dataset.location,locationEn:card.dataset['location-en'],slug:card.dataset.slug,popupContent:card.dataset.popupContent}}return null}).filter(building=>building!==null);console.log('Buildings for map:',buildings);if(document.getElementById('map')){setTimeout(()=>{if(buildings.length>0){const centerLat=buildings[0].lat;const centerLng=buildings[0].lng;initMap([centerLat,centerLng],buildings)}else{initMap([35.6762,139.6503],[])}},100)}const searchForm=document.querySelector('form[method="GET"]');if(searchForm){searchForm.addEventListener('submit',function(e){const query=this.querySelector('input[name="q"]').value.trim();if(!query){e.preventDefault();return false}})}const isBuildingPage=window.location.pathname.includes('/buildings/')&&window.location.pathname.split('/').length>2;if(!isBuildingPage){buildingCards.forEach(card=>{card.addEventListener('click',function(e){if(!e.target.closest('a')&&!e.target.closest('button')){const link=this.querySelector('.card-title a');if(link){window.location.href=link.href}}})})}});const style=document.createElement('style');style.textContent=`@keyframes pulse{0%{transform:scale(1);opacity:1}50%{transform:scale(1.1);opacity:0.7}100%{transform:scale(1);opacity:1}}@keyframes spin{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}`;document.head.appendChild(style);
